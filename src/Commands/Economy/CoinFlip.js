const { MessageEmbed } = require('discord.js');
const Profile = require('../../Models/Profile');
const { createProfile } = require('../../Structures/Utils');

const coinflipCooldowns = new Map();

module.exports = {
  name: 'cf',
  description: 'B·∫≠t ƒë·ªìng xu v√† ƒë·∫∑t c∆∞·ª£c xem m·∫∑t n√†o s·∫Ω xu·∫•t hi·ªán. H·∫°n ch·∫ø s·ª≠ d·ª•ng m·ªói 5 gi√¢y.',
  category: 'Kinh t·∫ø',
  options: [
    {
      name: 'bet',
      description: 'S·ªë ti·ªÅn c∆∞·ª£c (t·ªëi ƒëa 50000 - m·∫∑c ƒë·ªãnh l√† 1000).',
      required: true,
      type: 'INTEGER'
    },
    {
      name: 'guess',
      description: 'D·ª± ƒëo√°n: "ng·ª≠a" ho·∫∑c "s·∫•p".',
      required: true,
      type: 'STRING',
      choices: [
        { name: 'Ng·ª≠a', value: 'Ng·ª≠a' },
        { name: 'S·∫•p', value: 'S·∫•p' }
      ]
    }
  ],
  async run({ interaction, bot, guild }) {
    const profile = await Profile.findOne({ UserID: interaction.user.id, GuildID: guild.id });
    if (!profile) {
      await createProfile(interaction.user, guild);
      return interaction.reply({
        embeds: [
          new MessageEmbed()
            .setColor('BLURPLE')
            .setDescription(`*ƒêang t·∫°o h·ªì s∆° c·ªßa b·∫°n. . .*\n \n**S·ª≠ d·ª•ng l·ªánh n√†y m·ªôt l·∫ßn n·ªØa ƒë·ªÉ ch∆°i Coinflip.**`)
        ]
      });
    }

    if (coinflipCooldowns.has(interaction.user.id)) {
      const cooldownExpiration = coinflipCooldowns.get(interaction.user.id);
      if (Date.now() < cooldownExpiration) {
        const timeLeft = Math.ceil((cooldownExpiration - Date.now()) / 1000);
        return interaction.reply({
          embeds: [
            new MessageEmbed()
              .setColor('BLURPLE')
              .setTitle(`Coinflip c·ªßa **${interaction.user.username}**`)
              .setDescription(`*B·∫°n c·∫ßn ph·∫£i ƒë·ª£i th√™m* **${timeLeft} gi√¢y** *tr∆∞·ªõc khi c√≥ th·ªÉ ch∆°i Coinflip.*`)
          ],
        });
      }
    }

    const bet = interaction.options.getInteger('bet');

    if (bet < 1000 || bet > 50000) {
      return interaction.reply({
        embeds: [
          new MessageEmbed()
            .setColor('BLURPLE')
            .setDescription('**Gi·ªõi h·∫°n c∆∞·ª£c l√† t·ª´ 1000 ƒë·∫øn 50000 :coin:.**')
        ],
      });
    }

    const cooldownDuration = 5 * 1000; // 5 gi√¢y
    coinflipCooldowns.set(interaction.user.id, Date.now() + cooldownDuration);

    const result = Math.random() < 0.5 ? 'Ng·ª≠a' : 'S·∫•p';

    const winnings = result === interaction.options.getString('guess') ? bet : -bet;

    const updatedProfile = await Profile.findOneAndUpdate(
      { UserID: interaction.user.id, GuildID: guild.id, Wallet: { $gte: bet } },
      { $inc: { Wallet: winnings } },
      { new: true }
    );

    if (!updatedProfile) {
      return interaction.reply({
        embeds: [
          new MessageEmbed()
            .setColor('BLURPLE')              
            .setDescription('**S·ªë d∆∞ c·ªßa b·∫°n kh√¥ng ƒë·ªß ƒë·ªÉ ch∆°i `Coinflip` :coin: :coin: :coin:\n \nVui l√≤ng s·ª≠ d·ª•ng l·ªánh `Work` hay nh·∫≠n ti·ªÅnh√†ng ng√†y ƒë·ªÉ ch∆°i.**')
            ],
        });
    }
    const embed = new MessageEmbed()
  .setColor('BLURPLE')
  .setTitle(`Coinflip c·ªßa **${interaction.user.username}**`)
  .setDescription(`**üçí K·∫øt Qu·∫£ Tung Xu:** ${result}\n\n**‚ú® D·ª± ƒêo√°n:** ${interaction.options.getString('guess')}\n**üí∞ Ti·ªÅn Nh·∫≠n ƒê∆∞·ª£c:** ${winnings} :coin:`);

await interaction.reply({ embeds: [embed] });
    }
};